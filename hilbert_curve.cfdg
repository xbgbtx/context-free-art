CF::Impure = 1
CF::Background = [ b -1 ]
//CF::Size = [ s 1 x -0.5 y -0.5 ] 

T=1/100
O=4

startshape HC ( T, O ) []

sign(i)=if(i<0,-1,if(i>0,1,0))

vector2 c_add(vector2 c1, vector2 c2) = (c1[0]+c2[0]), (c1[1]+c2[1])

vector2 c_mult1(m,vector2 c)=c[0]*m,c[1]*m

shift(i,n)=if(n==0,i,shift(i,n-1)*10)
unshift(i)=if(i>1,i,unshift(i/10))

b4_(i,acc)=if(i==0,acc,
   let(
      m=i*4;
      d=floor(m);
      rem=mod(m,1); 
      b4_(rem,acc*10+d) 
   ))
b4(i)=unshift(b4_(i,0))

get_digit(i,n)=let(d=floor(i*10^n);mod(d,10))

//Count how many times digit d occurs the first n digits of i
dc(i,d,n)=if(n<=0,0,(floor(mod(i,10))==d)+dc(i*10,d,n-1))

vector2 hc_(t,n)=if(n==0, 
   (0,0), 
   let(
      j=n+1;
      q = t;
      qj=get_digit(q,j);
      e0=dc(q,0,j-1);
      e3=dc(q,3,j-1);
      //dj=e0+mod(e3,2);
      dj=mod(e0+e3,2);
      hn=c_mult1( ((-1^e0)/(2^j))*sign(qj), ( (1-dj)*qj-1, 1-dj*qj));
      c_add(hc(t,n-1), hn)
   ))
vector2 hc(t,n)=hc_(b4(t)*10,n)

shape HC ( t, o )
{
   if ( t <= 1 )
   {
      hn = hc(t,o)
      X = hn[0]
      Y = hn[1]
      SQUARE [ b 1 sat 1 h (360*t) x X y Y s 0.01 ]

      HC ( t+T, o ) []
   }
}
